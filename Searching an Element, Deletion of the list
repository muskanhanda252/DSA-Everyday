#include<bits/stdc++.h>
using namespace std;

class node{
    public:
    int data;
    node* next;
    
    public:
    node(int d):data(d),next(NULL){}
    ~node()
    {
        if(next!=NULL){
         delete next;
            cout<<"deleting node with data: "<<data<<endl;
        }    
    }
};
 class LList{
     public:
     node* head;
     node* tail;
     
     public:
     LList():head(NULL),tail(NULL){}
     
     void push_front(int data)
     {
         if(head==NULL)
         {
             node *n=new node(data);
             head=tail=n;
         }
         else
         {
             node *n=new node(data);
             n->next=head;
             head=n;
         }
     }
     
     void push_back(int data){
         if(head==NULL)
         {
             node *n=new node(data);
             head=tail=n;
         }
         else
         {
             node *n=new node(data);
             tail->next=n;
             tail=n;
         }
     }
     
     void insert(int data, int pos)
     {
         if(pos==0)
         {
             push_front(data);
             return;
         }
         else 
         {
             node *temp=head;
             
             for(int jump=1;jump<=pos-1;jump++)
             {
                 //traversing the linked list and making the necessary jumps:
                 temp=temp->next;
             }
             //now creating a new node:
             node *n=new node(data);
             n->next=temp->next;
             temp->next=n;
         }
     }
      
     int searching(int key)
     {
         node *temp=head;
         int index=0;
         
         while(temp!=NULL)
         {
             if(temp->data==key)
                  return index;
             index++;
             temp=temp->next;
         }
         return -1;
     }
     
     void printing()
     {
         node* temp=head;
         while(temp!=NULL)
         {
             cout<<temp->data<<" ";
             temp=temp->next;
         }
         cout<<endl;
     }
     
     ~LList()
     {
         if(head!=NULL)
         {
             delete head;
             head=NULL;
         }
     }
 };

int main()
{
    LList L;
    L.push_front(1);
    L.push_front(2);
    L.push_back(5);
    L.push_front(4);
    L.push_back(10);
    L.insert(4,5);
    L.insert(5,0);
    L.insert(20,3);
    L.printing();
    cout<<L.searching(20);
    cout<<endl;
    return 0;
}
